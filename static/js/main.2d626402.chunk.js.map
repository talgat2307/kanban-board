{"version":3,"sources":["assets/delete.svg","store/actionTypes.js","store/actions/cardActions.js","components/Card/index.js","store/actions/columnActions.js","components/Column/index.js","components/Button/index.js","assets/add.svg","components/AddForm/index.js","containers/Board.js","App.js","helpers/reorderCards.js","store/reducers/boardReducer.js","store/configureStore.js","store/localStorage.js","index.js"],"names":["ADD_CARD","REMOVE_CARD","ADD_COLUMN","REMOVE_COLUMN","CARDS_REORDER","addCardToColumn","card","columnIndex","dispatch","type","addCard","removeCardFromColumn","cardIndex","removeCard","reorderCards","source","destination","payload","cardsReorder","Card","children","useDispatch","draggableId","index","provided","className","ref","innerRef","draggableProps","dragHandleProps","onClick","src","deleteIcon","alt","addColumnToBoard","title","addColumn","removeColumnFromBoard","removeColumn","Column","cards","droppableId","droppableProps","map","placeholder","isEmptyColumn","Button","disableBtn","disabled","AddForm","useState","showForm","setShowForm","textareaRef","useRef","value","setValue","useEffect","current","focus","onChange","e","target","rows","addIcon","Board","board","useSelector","state","onDragEnd","result","column","key","App","sourceCardIndex","sourceId","destinationCardIndex","destinationId","sourceColumnIndex","parseInt","replace","destinationColumnIndex","item","currentColumnIndex","splice","sourceCard","destinationCards","Array","from","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","filter","persistedState","serializedState","localStorage","getItem","JSON","parse","loadFromLocalStorage","middleware","thunkMiddleware","store","createStore","applyMiddleware","subscribe","stringify","setItem","console","log","saveToLocalStorage","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d626402.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/delete.4ac10f93.svg\";","export const ADD_CARD = 'ADD_CARD';\nexport const REMOVE_CARD = 'REMOVE_CARD';\n\nexport const ADD_COLUMN = 'ADD_COLUMN';\nexport const REMOVE_COLUMN = 'REMOVE_COLUMN';\n\nexport const CARDS_REORDER = 'CARDS_REORDER';","import { ADD_CARD, CARDS_REORDER, REMOVE_CARD } from '../actionTypes';\n\nconst addCard = (card, columnIndex) => ({ type: ADD_CARD, card, columnIndex });\nconst removeCard = (columnIndex, cardIndex) => ({ type: REMOVE_CARD, columnIndex, cardIndex });\nconst cardsReorder = ({ source, destination }) => ({ type: CARDS_REORDER, payload: { source, destination } });\n\nexport const addCardToColumn = (card, columnIndex) => {\n  return dispatch => {\n    dispatch(addCard(card, columnIndex));\n  };\n};\n\nexport const removeCardFromColumn = (columnIndex, cardIndex) => {\n  return dispatch => {\n    dispatch(removeCard(columnIndex, cardIndex));\n  };\n};\n\nexport const reorderCards = ({ source, destination }) => {\n  return dispatch => {\n    dispatch(cardsReorder({ source, destination }));\n  };\n};\n\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Card.scss';\nimport deleteIcon from '../../assets/delete.svg';\nimport { removeCardFromColumn } from '../../store/actions/cardActions';\n\nconst Card = ({ children, cardIndex, columnIndex }) => {\n\n  const dispatch = useDispatch();\n\n  const onRemoveCard = () => {\n    dispatch(removeCardFromColumn(columnIndex, cardIndex));\n  };\n\n  return typeof cardIndex !== 'undefined' ? (\n    <Draggable\n      draggableId={`card-${columnIndex}-${cardIndex}`}\n      index={cardIndex}\n    >\n      {(provided) => (\n        <div\n          className=\"card\"\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <span>{children}</span>\n          <div\n            onClick={() => onRemoveCard()}\n            className=\"remove-btn\"\n          >\n            <img src={deleteIcon} alt=\"Delete icon\"/>\n          </div>\n        </div>\n      )}\n    </Draggable>\n  ) : (\n    <div className=\"card\">{children}</div>\n  );\n};\nCard.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n};\n\nexport default Card;","import { ADD_COLUMN, REMOVE_COLUMN } from '../actionTypes';\n\nconst addColumn = title => ({ type: ADD_COLUMN, title });\nconst removeColumn = columnIndex => ({ type: REMOVE_COLUMN, columnIndex });\n\nexport const addColumnToBoard = (title) => {\n  return dispatch => {\n    dispatch(addColumn(title));\n  };\n};\n\nexport const removeColumnFromBoard = (columnIndex) => {\n  return dispatch => {\n    dispatch(removeColumn(columnIndex));\n  };\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport './Column.scss';\nimport { Card, AddForm } from '../../components';\nimport deleteIcon from '../../assets/delete.svg';\nimport { useDispatch } from 'react-redux';\nimport { removeColumnFromBoard } from '../../store/actions/columnActions';\n\nconst Column = ({ title, cards, columnIndex }) => {\n\n  const dispatch = useDispatch();\n\n  const onRemoverColumn = () => {\n    dispatch(removeColumnFromBoard(columnIndex));\n  };\n\n  return cards ? (\n    <Droppable type=\"CARDS\" droppableId={`column-${columnIndex}`}>\n      {provided => (\n        <div\n          className=\"column\"\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n        >\n          <div className=\"column__inner\">\n            {title && <div className=\"column__title\">\n              <b>{title}</b>\n              <div\n                className=\"remove-btn\"\n                onClick={() => onRemoverColumn()}\n              >\n                <img src={deleteIcon} alt=\"Delete icon\"/>\n              </div>\n            </div>}\n            <div className=\"column__cards\">\n              {cards.map((card, index) => (\n                <Card\n                  key={index}\n                  cardIndex={index}\n                  columnIndex={columnIndex}\n                >\n                  {card}\n                </Card>\n              ))}\n              {provided.placeholder}\n            </div>\n            <AddForm\n              isEmptyColumn={false}\n              columnIndex={columnIndex}\n            />\n          </div>\n        </div>\n      )}\n    </Droppable>\n  ) : (\n    <div className={'column column__empty'}>\n      <div className=\"column__inner\">\n        <AddForm\n          isEmptyColumn={true}\n          columnIndex={columnIndex}\n        />\n      </div>\n    </div>\n  );\n};\n\nColumn.propTypes = {\n  cards: PropTypes.node,\n  title: PropTypes.string,\n};\n\nexport default Column;","import React from 'react';\nimport './Button.scss';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ children, onClick, disableBtn }) => {\n  return (\n    <button\n      className='button'\n      onClick={onClick}\n      disabled={disableBtn}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n}\n\n\nexport default Button;","export default __webpack_public_path__ + \"static/media/add.0bbf1711.svg\";","import addIcon from '../../assets/add.svg';\nimport deleteIcon from '../../assets/delete.svg';\nimport { Button, Card } from '../../components';\nimport './AddForm.scss';\nimport { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addCardToColumn } from '../../store/actions/cardActions';\nimport { addColumnToBoard } from '../../store/actions/columnActions';\n\nconst AddForm = ({ isEmptyColumn, columnIndex }) => {\n\n  const [showForm, setShowForm] = useState(false);\n  const textareaRef = useRef(null);\n  const [value, setValue] = useState();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.focus();\n    }\n  }, [showForm]);\n\n  const onSubmit = () => {\n    if (isEmptyColumn) {\n      dispatch(addColumnToBoard(value));\n    } else {\n      dispatch(addCardToColumn(value, columnIndex));\n    }\n    setValue('');\n    setShowForm(false);\n  };\n\n  return (\n    <>\n      {showForm ?\n        (<div className=\"add-form\">\n          <div className=\"add-form__input\">\n            <Card>\n              <textarea\n                onChange={(e) => setValue(e.target.value)}\n                value={value}\n                placeholder={isEmptyColumn ? 'Enter column title...' : 'Enter a title for this card...'}\n                ref={textareaRef}\n                rows={isEmptyColumn ? '1' : '3'}\n              />\n            </Card>\n            <div className=\"add-form__bottom\">\n              <Button\n                onClick={() => onSubmit()}\n                disableBtn={!value}\n              >\n                {isEmptyColumn ? 'Add a column' : 'Add a card'}\n              </Button>\n              <img\n                onClick={() => setShowForm(false)}\n                className=\"add-form__bottom-clear\"\n                src={deleteIcon}\n                alt=\"Delete icon\"\n              />\n            </div>\n          </div>\n        </div>)\n        :\n        (<div className=\"add-form__bottom\">\n          <div\n            onClick={() => setShowForm(true)}\n            className=\"add-form__bottom-add-btn\"\n          >\n            <img src={addIcon} alt=\"Add icon\"/>\n            <span>{isEmptyColumn ? 'Add another column' : 'Add another card'}</span>\n          </div>\n        </div>)}\n    </>\n  );\n};\n\nexport default AddForm;","import React from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Column } from '../components';\nimport { reorderCards } from '../store/actions/cardActions';\n\nconst Board = () => {\n\n  const board = useSelector(state => state.board);\n\n  const dispatch = useDispatch();\n\n  const onDragEnd = result => {\n    const { source, destination } = result;\n    if (!destination || (source.droppableId === destination.droppableId && source.index === destination.index)) {\n      return;\n    }\n    dispatch(reorderCards({ source, destination }));\n  };\n\n  return (\n    <>\n      <DragDropContext onDragEnd={onDragEnd}>\n        {board && board.map((column, index) =>\n          <Column\n            {...column}\n            key={index}\n            columnIndex={index}\n          />,\n        )}\n      </DragDropContext>\n      <Column/>\n    </>\n  );\n};\n\nexport default Board;","import Board from './containers/Board';\n\nconst App = () => (\n  <div className=\"app\">\n    <Board/>\n  </div>\n);\n\nexport default App;\n","export default ({ state, source, destination }) => {\n  const { index: sourceCardIndex, droppableId: sourceId } = source;\n  const {\n    index: destinationCardIndex,\n    droppableId: destinationId\n  } = destination;\n  const sourceColumnIndex = parseInt(sourceId.replace(\"column-\", \"\"));\n  const destinationColumnIndex = parseInt(destinationId.replace(\"column-\", \"\"));\n\n  return state.map((item, currentColumnIndex) => {\n    if (destinationColumnIndex === currentColumnIndex) {\n      const [sourceCard] = state[sourceColumnIndex].cards.splice(\n        sourceCardIndex,\n        1\n      );\n      const destinationCards = Array.from(state[destinationColumnIndex].cards);\n      destinationCards.splice(destinationCardIndex, 0, sourceCard);\n      item.cards = destinationCards;\n    }\n\n    return item;\n  });\n};\n","import { ADD_CARD, ADD_COLUMN, CARDS_REORDER, REMOVE_CARD, REMOVE_COLUMN } from '../actionTypes';\nimport reorderCards from '../../helpers/reorderCards';\n\nconst initialState = [\n  {\n    title: 'To do',\n    cards: ['Go to Gym 3x week', 'Read book', 'Learn TypeScript', 'Apply to Masters Degree'],\n  },\n  {\n    title: 'In Progress',\n    cards: ['Update Resume', 'Work on Kanban Board project', 'Watch Loki'],\n  },\n  {\n    title: 'Done',\n    cards: ['Meeting with friend', 'Write a plan of month'],\n  },\n];\n\nexport const boardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CARD:\n      return state.map((column, index) => {\n        if (action.columnIndex === index) {\n          return { ...column, cards: [...column.cards, action.card] };\n        }\n        return column;\n      });\n    case REMOVE_CARD:\n      return state.map((column, index) => {\n        if (action.columnIndex === index) {\n          return { ...column, cards: column.cards.filter((card, index) => index !== action.cardIndex) };\n        }\n        return column;\n      });\n    case CARDS_REORDER:\n      const { source, destination } = action.payload;\n      return reorderCards({\n        state,\n        source,\n        destination\n      });\n    case ADD_COLUMN:\n      return [\n        ...state,\n        {\n          title: action.title,\n          cards: [],\n        },\n      ];\n    case REMOVE_COLUMN:\n      return state.filter((column, index) => action.columnIndex !== index);\n    default:\n      return state;\n  }\n};","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { boardReducer } from './reducers/boardReducer';\nimport { loadFromLocalStorage, saveToLocalStorage } from './localStorage';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  board: boardReducer,\n});\n\nconst persistedState = loadFromLocalStorage();\n\nconst middleware = [\n  thunkMiddleware,\n];\n\nconst store = createStore(\n  rootReducer,\n  persistedState,\n  composeEnhancers(applyMiddleware(...middleware)),\n);\n\nstore.subscribe(() => {\n  saveToLocalStorage({\n    board: store.getState().board\n  });\n});\n\nexport default store;\n\n\n\n","export const saveToLocalStorage = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (e) {\n    console.log('Could not save state');\n  }\n};\n\nexport const loadFromLocalStorage = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.scss';\nimport App from './App';\nimport store from './store/configureStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}